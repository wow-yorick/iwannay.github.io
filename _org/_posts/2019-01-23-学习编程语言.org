#+AUTHOR: Yorick
#+EMAIL: wowyorick@126.com
#+TITLE: 学习编程语言（摘录之王垠博客）
#+DATE: <2021-01-31 Sun>
#+OPTIONS: ^:{}

开始用一种新的程序语言，他往往不是去看这个语言的大部头手册或者书籍，而是先有一个需要解决的问题。手头有了问题，他可以用两分钟浏览一下这语言的手册，看看这语言大概长什么样。然后，他直接拿起一段例子代码来开始修改捣鼓，想法把这代码改成自己正想解决的问题。在这个简短的过程中，他很快的掌握了这个语言，并用它表达出心里的想法。

遇到的问题:

    这个语言的“变量定义”是什么语法，需要“声明类型”吗，还是可以用“类型推导”？
    它的“类型”是什么语法？是否支持“泛型”？泛型的 “variance” 如何表达？
    这个语言的“函数”是什么语法，“函数调用”是什么语法，可否使用“缺省参数”？
    ……

这些实际问题都是随着写实际的代码，解决手头的问题，自然而然带出来的，而不是一开头就抱着语言手册看得仔仔细细

他是带着问题找特性，就像查字典一样，而不是被淹没于大部头的手册里面，昏昏欲睡一个月才开始写代码。

学习编程语言应该关注 ~语言特性~ =语言特性=

编程使用什么工具是重要的，然而工具终究不如自己的技术重要。


1.先把眼前的问题解决掉，解决好，再考虑将来的扩展问题。
2.先写出可用的代码，反复推敲，再考虑是否需要重用的问题。
3.先写出可用，简单，明显没有bug的代码，再考虑测试的问题。
